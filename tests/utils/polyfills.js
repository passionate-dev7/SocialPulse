/**\n * Polyfills for test environment\n */\n\n// TextEncoder/TextDecoder polyfill for Node.js\nif (typeof global.TextEncoder === 'undefined') {\n  const { TextEncoder, TextDecoder } = require('util');\n  global.TextEncoder = TextEncoder;\n  global.TextDecoder = TextDecoder;\n}\n\n// URL polyfill for older Node.js versions\nif (typeof global.URL === 'undefined') {\n  global.URL = require('url').URL;\n}\n\n// AbortController polyfill\nif (typeof global.AbortController === 'undefined') {\n  global.AbortController = require('abort-controller');\n}\n\n// Crypto polyfill for test environment\nif (typeof global.crypto === 'undefined') {\n  const crypto = require('crypto');\n  global.crypto = {\n    getRandomValues: (arr) => {\n      const buffer = crypto.randomBytes(arr.length);\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = buffer[i];\n      }\n      return arr;\n    },\n    randomUUID: () => crypto.randomUUID(),\n    subtle: {\n      digest: jest.fn().mockResolvedValue(new ArrayBuffer(32))\n    }\n  };\n}\n\n// Performance API polyfill\nif (typeof global.performance === 'undefined') {\n  global.performance = {\n    now: () => Date.now(),\n    mark: jest.fn(),\n    measure: jest.fn(),\n    getEntriesByName: jest.fn(() => []),\n    getEntriesByType: jest.fn(() => [])\n  };\n}\n\n// RequestAnimationFrame polyfill\nif (typeof global.requestAnimationFrame === 'undefined') {\n  global.requestAnimationFrame = (callback) => {\n    return setTimeout(callback, 16);\n  };\n  global.cancelAnimationFrame = (id) => {\n    clearTimeout(id);\n  };\n}\n\n// Fetch polyfill\nif (typeof global.fetch === 'undefined') {\n  global.fetch = jest.fn(() =>\n    Promise.resolve({\n      ok: true,\n      status: 200,\n      json: () => Promise.resolve({}),\n      text: () => Promise.resolve(''),\n      blob: () => Promise.resolve(new Blob()),\n      arrayBuffer: () => Promise.resolve(new ArrayBuffer(0))\n    })\n  );\n}\n\n// Console polyfill for environments that don't have it\nif (typeof global.console === 'undefined') {\n  global.console = {\n    log: jest.fn(),\n    error: jest.fn(),\n    warn: jest.fn(),\n    info: jest.fn(),\n    debug: jest.fn()\n  };\n}"