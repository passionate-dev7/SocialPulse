/**\n * Jest configuration for SocialPulse testing\n */\n\nmodule.exports = {\n  // Test environment\n  testEnvironment: 'jsdom',\n  \n  // Setup files\n  setupFilesAfterEnv: [\n    '<rootDir>/tests/utils/setup.ts'\n  ],\n  \n  // Module name mapping for imports\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/src/$1',\n    '^@tests/(.*)$': '<rootDir>/tests/$1'\n  },\n  \n  // File extensions to consider\n  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json'],\n  \n  // Transform configuration\n  transform: {\n    '^.+\\\\.(ts|tsx)$': [\n      'ts-jest',\n      {\n        tsconfig: {\n          jsx: 'react-jsx',\n          esModuleInterop: true,\n          allowSyntheticDefaultImports: true\n        }\n      }\n    ],\n    '^.+\\\\.(js|jsx)$': 'babel-jest'\n  },\n  \n  // Files to ignore during transformation\n  transformIgnorePatterns: [\n    'node_modules/(?!(axios|@testing-library|@ethersproject)/)',\n    '\\\\.pnp\\\\.[^\\\\\/]+$'\n  ],\n  \n  // Test file patterns\n  testMatch: [\n    '<rootDir>/tests/**/__tests__/**/*.(ts|tsx|js|jsx)',\n    '<rootDir>/tests/**/*.(test|spec).(ts|tsx|js|jsx)'\n  ],\n  \n  // Files to ignore\n  testPathIgnorePatterns: [\n    '/node_modules/',\n    '/dist/',\n    '/build/'\n  ],\n  \n  // Coverage configuration\n  collectCoverage: true,\n  coverageDirectory: '<rootDir>/coverage',\n  collectCoverageFrom: [\n    'src/**/*.{ts,tsx}',\n    '!src/**/*.d.ts',\n    '!src/**/*.stories.{ts,tsx}',\n    '!src/index.ts',\n    '!src/types/**/*'\n  ],\n  coverageReporters: [\n    'text',\n    'text-summary',\n    'html',\n    'lcov',\n    'json'\n  ],\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: 80\n    },\n    './src/services/': {\n      branches: 85,\n      functions: 85,\n      lines: 85,\n      statements: 85\n    },\n    './src/utils/': {\n      branches: 90,\n      functions: 90,\n      lines: 90,\n      statements: 90\n    }\n  },\n  \n  // Global test configuration\n  globals: {\n    'ts-jest': {\n      tsconfig: 'tsconfig.json'\n    }\n  },\n  \n  // Mock configuration\n  clearMocks: true,\n  resetMocks: true,\n  restoreMocks: true,\n  \n  // Test timeout\n  testTimeout: 10000,\n  \n  // Verbose output\n  verbose: true,\n  \n  // Error handling\n  errorOnDeprecated: true,\n  \n  // Watch mode configuration\n  watchman: true,\n  watchPathIgnorePatterns: [\n    '/node_modules/',\n    '/coverage/',\n    '/dist/',\n    '/build/'\n  ],\n  \n  // Reporter configuration\n  reporters: [\n    'default',\n    [\n      'jest-junit',\n      {\n        outputDirectory: './test-results',\n        outputName: 'junit.xml',\n        suiteName: 'SocialPulse Tests'\n      }\n    ]\n  ],\n  \n  // Performance configuration\n  maxWorkers: '50%',\n  cache: true,\n  cacheDirectory: '<rootDir>/.jest-cache',\n  \n  // Custom test environments for different test types\n  projects: [\n    {\n      displayName: 'unit',\n      testMatch: ['<rootDir>/tests/unit/**/*.test.(ts|tsx)'],\n      testEnvironment: 'jsdom'\n    },\n    {\n      displayName: 'integration',\n      testMatch: ['<rootDir>/tests/integration/**/*.test.(ts|tsx)'],\n      testEnvironment: 'jsdom',\n      testTimeout: 30000\n    },\n    {\n      displayName: 'e2e',\n      testMatch: ['<rootDir>/tests/e2e/**/*.test.(ts|tsx)'],\n      testEnvironment: 'node',\n      testTimeout: 60000,\n      setupFilesAfterEnv: []\n    },\n    {\n      displayName: 'performance',\n      testMatch: ['<rootDir>/tests/performance/**/*.test.(ts|tsx)'],\n      testEnvironment: 'node',\n      testTimeout: 120000\n    }\n  ],\n  \n  // Module resolution\n  moduleDirectories: ['node_modules', '<rootDir>/src', '<rootDir>/tests'],\n  \n  // Handle static assets\n  moduleNameMapping: {\n    '\\\\.(css|less|scss|sass)$': 'identity-obj-proxy',\n    '\\\\.(jpg|jpeg|png|gif|svg)$': '<rootDir>/tests/__mocks__/fileMock.js'\n  },\n  \n  // Handle ES modules in node_modules\n  extensionsToTreatAsEsm: ['.ts', '.tsx'],\n  \n  // Custom matchers and utilities\n  setupFiles: [\n    '<rootDir>/tests/utils/polyfills.js'\n  ]\n};"